com.dave.paoBing.main.CanvasControl -> com.dave.paoBing.main.a:
    com.dave.paoBing.main.MainMIDlet midlet -> i
    java.lang.String iptvID -> a
    com.zn.hs.prop.HSProp hs_tool -> b
    boolean needRepaint -> j
    int mission -> c
    com.dave.showable.Showable view -> k
    com.dave.showable.Showable goBackView -> l
    long cycleStartTime -> m
    long cycleUseTime -> n
    com.dave.paoBing.net.ServerIptv serverIptv -> o
    com.dave.paoBing.view.NullView nullView -> d
    int rank -> e
    int complete -> f
    java.util.Vector rankInfo -> g
    int goodsIndex -> h
    void paint(javax.microedition.lcdui.Graphics) -> paint
    void run() -> run
    void setView(com.dave.showable.Showable) -> a
    void keyPressed(int) -> keyPressed
    void keyReleased(int) -> keyReleased
    void keyRepeated(int) -> keyRepeated
    com.dave.paoBing.main.MainMIDlet getMidlet() -> a
    com.dave.showable.Showable getGoBackView() -> b
    void setGoBackView(com.dave.showable.Showable) -> b
    void doBuySuccess() -> c
    void setNeedRepaint(boolean) -> a
    void onResult$42923b27(java.lang.String) -> a
com.dave.paoBing.main.MainMIDlet -> com.dave.paoBing.main.MainMIDlet:
    com.dave.paoBing.main.CanvasControl canvasControl -> a
    void destroyApp(boolean) -> destroyApp
    void pauseApp() -> pauseApp
    void startApp() -> startApp
    void exitGame() -> a
com.dave.paoBing.model.Bullet -> a:
    int x -> a
    int y -> b
    int x_point -> c
    int y_point -> d
    int x_start -> e
    int y_start -> f
    com.dave.paoBing.view.Game game -> g
    javax.microedition.lcdui.Image img_bullet -> h
    int power -> i
    int type -> j
    void initImage() -> b
    void show(javax.microedition.lcdui.Graphics) -> a
    void logic() -> a
    java.lang.String encode(java.lang.String) -> a
com.dave.paoBing.model.Enemy -> b:
    int x -> a
    int y -> b
    int x_head -> h
    int y_head -> i
    int width_cln -> c
    int height_cln -> d
    com.dave.paoBing.view.Game game -> j
    int direction -> k
    int type -> l
    int life -> e
    int lifeMax -> m
    boolean dead -> f
    javax.microedition.lcdui.Image[] a_img_enemy -> n
    javax.microedition.lcdui.Image img_body -> o
    javax.microedition.lcdui.Image img_head -> p
    int frame -> q
    int head_fly -> r
    int head_offer_y -> s
    boolean stop_head -> t
    int jump_times_head -> u
    int head_offer_x -> v
    boolean shootting -> g
    int shootTime -> w
    boolean afterFier -> x
    int speedControl -> y
    com.dave.paoBing.model.Obstacle obstacle -> z
    int acc -> A
    void loadImage() -> a
    void show(javax.microedition.lcdui.Graphics) -> a
    void logic() -> b
    void beHit(int) -> a
    void removeAliveImage() -> c
    java.lang.String encode(java.lang.String) -> a
com.dave.paoBing.model.Fragment -> c:
    int x -> a
    int y -> b
    int direction -> c
    int speed -> d
    javax.microedition.lcdui.Image img -> e
    com.dave.paoBing.view.Game game -> f
    void show(javax.microedition.lcdui.Graphics) -> a
com.dave.paoBing.model.Hero -> d:
    com.dave.paoBing.view.Game game -> g
    int angle_index -> a
    int frame -> h
    int speedControl -> i
    int keyPingControl -> j
    boolean keyUpPress -> k
    boolean keyDownPress -> l
    int x -> b
    int y -> c
    int x_muzzle -> m
    int y_muzzle -> n
    int attackPower -> o
    int lifeMax -> d
    int life -> e
    boolean afterFier -> p
    boolean showBoom -> q
    javax.microedition.lcdui.Image[] a_img_boom -> r
    javax.microedition.lcdui.Image[] a_img_bleed -> s
    int boomFrame -> t
    boolean weak -> f
    void show(javax.microedition.lcdui.Graphics) -> a
    void loadGameHeroImage() -> b
    void keyPressed(int) -> a
    void keyReleased(int) -> b
    void updateMuzzlePoint() -> c
    void logic() -> a
    void beHit(int) -> c
com.dave.paoBing.model.Missile -> e:
    int x -> a
    int y -> b
    int angle -> c
    com.dave.paoBing.view.Game game -> d
    javax.microedition.lcdui.Image img_missile -> e
    javax.microedition.lcdui.Image[] a_img_boom -> f
    int power -> g
    boolean showBoom -> h
    int boomFrame -> i
    int y_boom -> j
    int x_boom -> k
    void show(javax.microedition.lcdui.Graphics) -> a
    void logic() -> a
    void boom(int) -> a
com.dave.paoBing.model.Obstacle -> f:
    com.dave.paoBing.view.Game game -> h
    int type -> a
    javax.microedition.lcdui.Image[] a_img_obstacle -> i
    javax.microedition.lcdui.Image[] a_img_chip -> j
    int lifeMax -> k
    int life -> b
    int x -> c
    int y -> d
    int width_cln -> e
    int height_cln -> f
    boolean boom -> g
    java.util.Vector v_fragment -> l
    int boomTime -> m
    int layer -> n
    int style -> o
    com.dave.paoBing.model.Obstacle nextOst -> p
    int y_offer_down -> q
    boolean upDown -> r
    void loadImage() -> a
    void show(javax.microedition.lcdui.Graphics) -> a
    void beHit(int,int) -> a
    void initTrips() -> d
    void removeImage() -> b
    void logic() -> c
com.dave.paoBing.model.Pier -> g:
    com.dave.paoBing.view.Game game -> e
    int x -> a
    int y -> b
    int width_cln -> c
    int height_cln -> d
    void show(javax.microedition.lcdui.Graphics) -> a
com.dave.paoBing.net.Connection -> h:
    com.dave.paoBing.net.ServerIptv si -> a
    java.lang.Thread thread -> b
    java.lang.String httpAddress -> c
    int index -> d
    void run() -> run
    byte[] getViaHttpConnection(java.lang.String) -> a
com.dave.paoBing.net.ServerIptv -> i:
    com.dave.paoBing.main.CanvasControl canvasControl -> a
    java.lang.String encryptedStr -> b
    java.lang.String submitURL -> c
    void backStr(int,java.lang.String) -> a
    void doGetUserProfile() -> a
    void doGetRank() -> b
    void doSendScore() -> c
    java.util.Vector getJsonArrayData(java.lang.String,java.lang.String[]) -> a
    java.lang.String getUrl(java.lang.String,java.lang.String) -> a
com.dave.paoBing.net.md5 -> j:
    byte[] PADDING -> a
    long[] state -> b
    long[] count -> c
    byte[] buffer -> d
    java.lang.String digestHexStr -> e
    byte[] digest -> f
    void md5Init() -> a
    long FF(long,long,long,long,long,long,long) -> a
    long GG(long,long,long,long,long,long,long) -> b
    long HH(long,long,long,long,long,long,long) -> c
    long II(long,long,long,long,long,long,long) -> d
    void md5Update(byte[],int) -> a
    void md5Memcpy(byte[],byte[],int,int,int) -> a
    void md5Transform(byte[]) -> a
    void Encode(byte[],long[],int) -> a
    long b2iu(byte) -> a
    java.lang.String toMD5(java.lang.String) -> a
com.dave.paoBing.tool.C -> k:
    java.util.Hashtable angleValue -> f
    short WIDTH -> a
    short HEIGTH -> b
    boolean isZHONGXING -> c
    javax.microedition.lcdui.Font FONT_LARGE_BLOD -> d
    java.lang.String COMPANYURL_PHP -> e
    int sin(int) -> a
    int getCosAngleValue(int) -> c
    int cos(int) -> b
    void out(java.lang.String) -> a
    void drawString(javax.microedition.lcdui.Graphics,javax.microedition.lcdui.Image,java.lang.String,java.lang.String,int,int,int,int,int,int,int) -> a
    java.lang.String[] subStr(int,javax.microedition.lcdui.Font,java.lang.String) -> a
    void DrawImage_VH(javax.microedition.lcdui.Image,int,int,javax.microedition.lcdui.Graphics) -> a
com.dave.paoBing.view.CheckCode -> l:
    javax.microedition.lcdui.Font CheckCode_FONT_BOLD_LARGE -> a
    int CheckCode_LARGE_BOLD_STRINGWIDTH -> b
    com.dave.paoBing.main.CanvasControl canvasControl -> c
    javax.microedition.lcdui.Image[] imagea_Check -> d
    byte ImageCount -> e
    byte buttonIndex -> f
    byte rawIndex -> g
    java.lang.String gui -> h
    boolean b_gui -> i
    byte byte_logi -> j
    java.lang.StringBuffer sb_CheckCode -> k
    int rani -> l
    com.dave.showable.Showable lastView -> m
    void keyPressed(int) -> a
    void show(javax.microedition.lcdui.Graphics) -> a
    void loadResource() -> a
    void removeResource() -> c
    void keyReleased(int) -> b
    void logic() -> b
com.dave.paoBing.view.Complete -> m:
    com.dave.paoBing.main.CanvasControl canvasControl -> a
    javax.microedition.lcdui.Font FONT_TITLE -> b
    javax.microedition.lcdui.Font FONT_TEXT -> c
    java.lang.String[] staff -> d
    java.lang.String[] text -> e
    int x_text -> f
    int y_text -> g
    int row_height -> h
    int waitTime -> i
    void show(javax.microedition.lcdui.Graphics) -> a
    void loadResource() -> a
    void keyPressed(int) -> a
    void keyReleased(int) -> b
    void logic() -> b
com.dave.paoBing.view.Dialog -> n:
    com.dave.paoBing.main.CanvasControl canvasControl -> b
    com.dave.paoBing.view.Game game -> c
    int type -> d
    int index -> e
    javax.microedition.lcdui.Image img_back -> f
    javax.microedition.lcdui.Image img_word -> g
    javax.microedition.lcdui.Image img_yesWord -> h
    javax.microedition.lcdui.Image img_noWord -> i
    javax.microedition.lcdui.Image img_bar -> j
    javax.microedition.lcdui.Image img_number -> k
    javax.microedition.lcdui.Image img_pointer -> l
    javax.microedition.lcdui.Image img_rmb -> m
    java.lang.String[] GOODS_PRICE -> a
    void show(javax.microedition.lcdui.Graphics) -> a
    void loadResource() -> a
    void removeResource() -> c
    void keyPressed(int) -> a
    void keyReleased(int) -> b
    void logic() -> b
    int access$0(com.dave.paoBing.view.Dialog) -> a
    com.dave.paoBing.main.CanvasControl access$1(com.dave.paoBing.view.Dialog) -> b
    com.dave.paoBing.view.Game access$2(com.dave.paoBing.view.Dialog) -> c
com.dave.paoBing.view.Dialog$AutoCloseDialogTimerTask -> o:
    com.dave.paoBing.view.Dialog this$0 -> a
    void run() -> run
com.dave.paoBing.view.Game -> p:
    com.dave.paoBing.main.CanvasControl canvasControl -> r
    int x_map -> a
    javax.microedition.lcdui.Image[] a_img_map -> s
    javax.microedition.lcdui.Image img_bottom_bar -> t
    javax.microedition.lcdui.Image img_point_shooter -> u
    javax.microedition.lcdui.Image img_number -> v
    javax.microedition.lcdui.Image[] a_img_blood_bar -> b
    javax.microedition.lcdui.Image[][] a_img_hero -> c
    javax.microedition.lcdui.Image img_pier -> d
    javax.microedition.lcdui.Image img_word_weak -> w
    int remain_missile -> e
    int doublePower -> f
    java.util.Vector v_pier -> g
    java.util.Vector v_enemy -> h
    java.util.Vector v_obstacle -> i
    int shooterIndex -> j
    int remainLife -> k
    int[][] a_point_pier -> x
    int count_pier -> l
    com.dave.paoBing.model.Hero hero -> m
    com.dave.paoBing.model.Missile missile -> n
    int y_move -> y
    int weakControl -> z
    boolean showWeak -> o
    int weak_w_y -> A
    com.dave.paoBing.model.Enemy shoottingEnemy -> B
    com.dave.paoBing.model.Bullet bullet -> p
    boolean shootterDead -> C
    boolean showMap -> q
    int mapControl -> D
    javax.microedition.lcdui.Image img_word_bullet -> E
    javax.microedition.lcdui.Image img_word_mission -> F
    boolean moveMapRight -> G
    boolean moveMapLeft -> H
    void initMession() -> c
    void show(javax.microedition.lcdui.Graphics) -> a
    void loadResource() -> a
    void loadWeakImage() -> d
    void removeWeakImage() -> e
    void removeServerImage() -> f
    void removeResource() -> g
    void keyPressed(int) -> a
    void keyReleased(int) -> b
    void logic() -> b
    void nextShooter() -> h
    com.dave.paoBing.main.CanvasControl getCanvasControl() -> i
com.dave.paoBing.view.Help -> q:
    com.dave.paoBing.main.CanvasControl canvasControl -> a
    int type -> b
    javax.microedition.lcdui.Image img_back -> c
    javax.microedition.lcdui.Image img_goBack -> d
    void show(javax.microedition.lcdui.Graphics) -> a
    void loadResource() -> a
    void removeResource() -> c
    void keyPressed(int) -> a
    void keyReleased(int) -> b
    void logic() -> b
com.dave.paoBing.view.Home -> r:
    com.dave.paoBing.main.CanvasControl canvasControl -> a
    javax.microedition.lcdui.Image img_back -> b
    javax.microedition.lcdui.Image img_bomb -> c
    javax.microedition.lcdui.Image[] ima_word -> d
    javax.microedition.lcdui.Image[] ima_boom -> e
    javax.microedition.lcdui.Image[] ima_fire -> f
    javax.microedition.lcdui.Image img_point -> g
    javax.microedition.lcdui.Image img_u_point -> h
    byte index -> i
    int frame_fire -> j
    int frame_boom -> k
    boolean boom -> l
    byte gotoIndex -> m
    int wordY -> n
    void show(javax.microedition.lcdui.Graphics) -> a
    void keyPressed(int) -> a
    void keyReleased(int) -> b
    void loadResource() -> a
    void removeResource() -> c
    void logic() -> b
com.dave.paoBing.view.NullView -> s:
    void show(javax.microedition.lcdui.Graphics) -> a
    void loadResource() -> a
    void keyPressed(int) -> a
    void keyReleased(int) -> b
    void logic() -> b
com.dave.paoBing.view.Ranking -> t:
    com.dave.paoBing.main.CanvasControl canvasControl -> a
    javax.microedition.lcdui.Image img_back -> b
    javax.microedition.lcdui.Image img_goBack -> c
    javax.microedition.lcdui.Image img_number -> d
    void show(javax.microedition.lcdui.Graphics) -> a
    void loadResource() -> a
    void keyPressed(int) -> a
    void keyReleased(int) -> b
    void logic() -> b
com.dave.showable.Showable -> u:
    void show(javax.microedition.lcdui.Graphics) -> a
    void loadResource() -> a
    void keyPressed(int) -> a
    void keyReleased(int) -> b
    void logic() -> b
com.zn.hs.httpc.HSConnection -> v:
    java.lang.Thread thread -> a
    java.lang.String httpAddress -> b
    void run() -> run
    byte[] getViaHttpConnection(java.lang.String) -> a
com.zn.hs.httpc.HSmd5 -> w:
    byte[] PADDING -> a
    long[] state -> b
    long[] count -> c
    byte[] buffer -> d
    java.lang.String digestHexStr -> e
    byte[] digest -> f
    void md5Init() -> a
    long FF(long,long,long,long,long,long,long) -> a
    long GG(long,long,long,long,long,long,long) -> b
    long HH(long,long,long,long,long,long,long) -> c
    long II(long,long,long,long,long,long,long) -> d
    void md5Update(byte[],int) -> a
    void md5Memcpy(byte[],byte[],int,int,int) -> a
    void md5Transform(byte[]) -> a
    void Encode(byte[],long[],int) -> a
    long b2iu(byte) -> a
    java.lang.String toMD5(java.lang.String) -> a
com.zn.hs.prop.HSProp -> x:
    java.lang.String HSProp_Version -> a
    javax.microedition.midlet.MIDlet getMid -> h
    com.zn.hs.prop.HSPropListenner hsPropListenner -> i
    byte breakPoint -> b
    java.lang.String deductType -> c
    java.lang.String stbid -> d
    java.lang.String userid -> e
    java.lang.String deductfee -> j
    java.lang.String cpcode -> k
    java.lang.String actionID -> l
    com.zn.hs.prop.ioStream ioStream -> f
    java.lang.String GAMEPROP_ADDRESS -> g
    java.lang.String buyPropAddress -> m
    java.util.Random random -> n
    void DodeductFee$16da05f7(java.lang.String) -> a
    void DoBuyPropSuccess(java.lang.String,java.lang.String,java.lang.String) -> a
    int getRandom(int,int) -> a
    void returnApiData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void setCpcode(java.lang.String) -> b
    void setActionID(java.lang.String) -> c
    java.lang.String encrypt(java.lang.String) -> d
    boolean access$0(com.zn.hs.prop.HSProp) -> a
    java.lang.String access$1(com.zn.hs.prop.HSProp) -> b
    java.lang.String access$2(com.zn.hs.prop.HSProp) -> c
    java.lang.String access$3(com.zn.hs.prop.HSProp) -> d
com.zn.hs.prop.HSProp$1 -> y:
    com.zn.hs.prop.HSProp this$0 -> a
    void run() -> run
com.zn.hs.prop.HSPropListenner -> z:
    void onResult$42923b27(java.lang.String) -> a
com.zn.hs.prop.ParseXML -> aa:
    java.lang.String xml_key -> a
    int keyStart -> b
    int keyEnd -> c
    java.lang.String xml_value -> d
    int valueStart -> e
    int valueEnd -> f
    int valueCount -> g
    byte[] bytea_parsexml -> h
    boolean b_start -> i
    boolean b_exit -> j
    java.util.Hashtable hashtable -> k
    void parsexml(byte[],java.util.Hashtable) -> a
com.zn.hs.prop.ioStream -> ab:
    com.zn.hs.prop.HSProp hsp -> a
    byte[] BufferData -> b
    javax.microedition.io.SocketConnection socketCon -> c
    java.io.InputStream inputStream -> d
    java.io.OutputStream outputStream -> e
    java.lang.Thread streamThread -> f
    boolean readStreamData -> g
    com.zn.hs.prop.ParseXML parsexml -> h
    java.util.Hashtable hashTableIO -> i
    void sendXMLDate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void run() -> run
    boolean SocketConn() -> a
    void clear() -> b
org.json.me.BooleanEx -> ac:
    java.lang.Boolean TRUE -> a
    java.lang.Boolean FALSE -> b
org.json.me.JSONArray -> ad:
    java.util.Vector myArrayList -> a
    java.lang.String join(java.lang.String) -> a
    int length() -> a
    java.lang.Object opt(int) -> a
    java.lang.String toString() -> toString
org.json.me.JSONException -> ae:
org.json.me.JSONObject -> af:
    java.util.Hashtable myHashMap -> b
    java.lang.Object NULL -> a
    java.lang.Object get(java.lang.String) -> c
    long getNum(java.lang.String) -> d
    int getInt(java.lang.String) -> a
    java.lang.String getString(java.lang.String) -> b
    java.lang.String numberToString(java.lang.Object) -> b
    java.lang.String quote(java.lang.String) -> e
    java.lang.String toString() -> toString
    java.lang.String valueToString(java.lang.Object) -> a
org.json.me.JSONObject$Null -> ag:
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
org.json.me.JSONString -> ah:
    java.lang.String toJSONString() -> a
org.json.me.JSONTokener -> ai:
    int myIndex -> a
    java.lang.String mySource -> b
    void back() -> a
    char next() -> b
    java.lang.String next(int) -> a
    char nextClean() -> c
    java.lang.Object nextValue() -> d
    org.json.me.JSONException syntaxError(java.lang.String) -> a
    java.lang.String toString() -> toString
