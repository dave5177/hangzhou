com.dave.ftxz.main.CanvasControl -> com.dave.ftxz.main.a:
    com.dave.ftxz.main.MainMIDlet midlet -> s
    java.lang.String iptvID -> a
    com.zn.hs.prop.HSProp hs_tool -> b
    java.lang.String url -> t
    java.lang.String[][] A_GOODS_PARAM -> c
    com.dave.showable.Showable view -> u
    com.dave.showable.Showable goBackView -> v
    long cycleStartTime -> w
    long cycleUseTime -> x
    com.dave.ftxz.view.NullView nullView -> d
    boolean reliving -> e
    java.util.Vector rankInfo_month -> f
    java.util.Vector rankInfo_week -> g
    int goodsIndex -> h
    int distance -> i
    int coin_total -> j
    int type_hero -> k
    boolean willExit -> l
    java.lang.String serverStr -> y
    int score_week -> m
    int rank_week -> n
    int score_month -> o
    int rank_month -> p
    boolean willStart -> q
    int[] goodsNumber -> r
    void paint(javax.microedition.lcdui.Graphics) -> paint
    void run() -> run
    void setView(com.dave.showable.Showable) -> a
    void keyPressed(int) -> keyPressed
    void keyReleased(int) -> keyReleased
    void keyRepeated(int) -> keyRepeated
    com.dave.ftxz.main.MainMIDlet getMidlet() -> a
    com.dave.showable.Showable getGoBackView() -> b
    void setGoBackView(com.dave.showable.Showable) -> b
    void doBuySuccess() -> c
    void saveParam() -> d
    void handleParam(java.lang.String) -> a
    void handleTimeStr(java.lang.String,java.lang.String) -> a
    void onResult$42923b27(java.lang.String) -> b
com.dave.ftxz.main.MainMIDlet -> com.dave.ftxz.main.MainMIDlet:
    com.dave.ftxz.main.CanvasControl canvasControl -> a
    void destroyApp(boolean) -> destroyApp
    void pauseApp() -> pauseApp
    void startApp() -> startApp
    void exitGame() -> a
com.dave.ftxz.model.Aerolite -> a:
    com.dave.ftxz.view.Game game -> a
    int x -> b
    int y -> c
    com.dave.ftxz.tool.Rect rect_clsn -> d
    int time -> e
    int frame_alert -> f
    void show(javax.microedition.lcdui.Graphics) -> a
    void logic() -> a
    java.lang.String encode(java.lang.String) -> a
com.dave.ftxz.model.Bird -> b:
    int x -> c
    int y -> d
    int life -> a
    int lifeMax -> e
    com.dave.ftxz.tool.Rect rect_clsn -> b
    com.dave.ftxz.view.Game game -> f
    int type -> g
    boolean beHit -> h
    int frame_beHit -> i
    int showBloodTime -> j
    boolean boom -> k
    int blink -> l
    int frame_boom -> m
    void show(javax.microedition.lcdui.Graphics) -> a
    void logic() -> a
    void removeMe() -> b
    void beHit(com.dave.ftxz.model.Bullet) -> a
    java.lang.String encode(java.lang.String) -> a
com.dave.ftxz.model.Bullet -> c:
    int x -> b
    int y -> c
    int type -> d
    int power -> a
    com.dave.ftxz.tool.Rect rect_clsn -> e
    com.dave.ftxz.view.Game game -> f
    void show(javax.microedition.lcdui.Graphics) -> a
    void logic() -> a
    void removeMe() -> b
com.dave.ftxz.model.Coin -> d:
    com.dave.ftxz.view.Game game -> a
    int x -> b
    int y -> c
    com.dave.ftxz.tool.Rect rect_clsn -> d
    int speed_y -> e
    int speed_x -> f
    boolean ate -> g
    void show(javax.microedition.lcdui.Graphics) -> a
    void logic() -> a
    void removeMe() -> b
com.dave.ftxz.model.Hero -> e:
    com.dave.ftxz.view.Game game -> a
    int type -> b
    int x -> c
    int y -> d
    com.dave.ftxz.tool.Rect rect_clsn -> e
    com.dave.ftxz.model.Pet pet -> f
    int codeKeyDown -> j
    int time_fire -> g
    int speed_fly -> h
    boolean beHit -> i
    int frame_beHit -> k
    int blink_sprint -> l
    int frame_sprint -> m
    int blink_protected -> n
    int frame_attract -> o
    int blink_attract -> p
    int numb_relive -> q
    boolean goin -> r
    void show(javax.microedition.lcdui.Graphics) -> a
    void keyPressed(int) -> a
    void keyReleased(int) -> b
    void logic() -> a
    void fly() -> b
    void fire() -> c
    void beHit() -> d
    void getTreasure(int) -> c
com.dave.ftxz.model.Pet -> f:
    com.dave.ftxz.model.Hero hero -> k
    int frame -> l
    int moveToSide -> j
    boolean join -> m
    int speed_jion -> n
    void fire() -> c
    void show(javax.microedition.lcdui.Graphics) -> a
    void logic() -> a
com.dave.ftxz.model.Treasure -> g:
    com.dave.ftxz.view.Game game -> a
    int x -> b
    int y -> c
    int type -> d
    com.dave.ftxz.tool.Rect rect_clsn -> e
    int speed_y -> f
    int dir_a -> g
    void show(javax.microedition.lcdui.Graphics) -> a
    void logic() -> a
    void removeMe() -> b
com.dave.ftxz.net.Connection -> h:
    com.dave.ftxz.net.ServerIptv si -> a
    java.lang.Thread thread -> b
    java.lang.String httpAddress -> c
    int index -> d
    void run() -> run
    byte[] getViaHttpConnection(java.lang.String) -> a
com.dave.ftxz.net.ServerIptv -> i:
    com.dave.ftxz.main.CanvasControl canvasControl -> a
    java.lang.String encryptedStr -> b
    java.lang.String submitURL -> c
    void backStr(int,java.lang.String) -> a
    void doGetUserProfile() -> a
    void doSendUserInfo(java.lang.String) -> a
    void doSendScore(int,int) -> a
    java.util.Vector getJsonArrayData(java.lang.String,java.lang.String[]) -> a
    java.lang.String getUrl(java.lang.String,java.lang.String) -> a
com.dave.ftxz.net.md5 -> j:
    byte[] PADDING -> a
    long[] state -> b
    long[] count -> c
    byte[] buffer -> d
    java.lang.String digestHexStr -> e
    byte[] digest -> f
    void md5Init() -> a
    long FF(long,long,long,long,long,long,long) -> a
    long GG(long,long,long,long,long,long,long) -> b
    long HH(long,long,long,long,long,long,long) -> c
    long II(long,long,long,long,long,long,long) -> d
    void md5Update(byte[],int) -> a
    void md5Memcpy(byte[],byte[],int,int,int) -> a
    void md5Transform(byte[]) -> a
    void Encode(byte[],long[],int) -> a
    long b2iu(byte) -> a
    java.lang.String toMD5(java.lang.String) -> a
com.dave.ftxz.tool.C -> k:
    java.util.Hashtable angleValue -> f
    short WIDTH -> a
    short HEIGTH -> b
    boolean isZHONGXING -> c
    javax.microedition.lcdui.Font FONT_LARGE_BLOD -> d
    java.lang.String COMPANYURL_PHP -> e
    void out(java.lang.String) -> a
    void drawString(javax.microedition.lcdui.Graphics,javax.microedition.lcdui.Image,java.lang.String,java.lang.String,int,int,int,int,int,int,int) -> a
    java.lang.String[] subString(java.lang.String,char,int) -> a
    boolean rectInsect(com.dave.ftxz.tool.Rect,com.dave.ftxz.tool.Rect) -> a
    void DrawImage_VH(javax.microedition.lcdui.Image,int,int,javax.microedition.lcdui.Graphics) -> a
com.dave.ftxz.tool.Rect -> l:
    int x -> a
    int y -> b
    int w -> c
    int h -> d
com.dave.ftxz.view.CheckCode -> m:
    javax.microedition.lcdui.Font CheckCode_FONT_BOLD_LARGE -> a
    int CheckCode_LARGE_BOLD_STRINGWIDTH -> b
    com.dave.ftxz.main.CanvasControl canvasControl -> c
    javax.microedition.lcdui.Image[] imagea_Check -> d
    byte ImageCount -> e
    byte buttonIndex -> f
    byte rawIndex -> g
    java.lang.String gui -> h
    boolean b_gui -> i
    byte byte_logi -> j
    java.lang.StringBuffer sb_CheckCode -> k
    int rani -> l
    void keyPressed(int) -> a
    void show(javax.microedition.lcdui.Graphics) -> a
    void loadResource() -> a
    void removeResource() -> d
    void removeServerImage() -> b
    void keyReleased(int) -> b
    void logic() -> c
com.dave.ftxz.view.Dialog -> n:
    com.dave.ftxz.main.CanvasControl canvasControl -> a
    com.dave.showable.Showable lastView -> b
    int type -> c
    int index -> d
    javax.microedition.lcdui.Image img_back -> e
    javax.microedition.lcdui.Image img_word -> f
    javax.microedition.lcdui.Image img_yesWord -> g
    javax.microedition.lcdui.Image img_noWord -> h
    javax.microedition.lcdui.Image img_button -> i
    javax.microedition.lcdui.Image img_number -> j
    javax.microedition.lcdui.Image img_number_score -> k
    javax.microedition.lcdui.Image img_pointer -> l
    javax.microedition.lcdui.Image img_word_top -> m
    javax.microedition.lcdui.Image img_result_bar -> n
    javax.microedition.lcdui.Image img_goods_name -> o
    javax.microedition.lcdui.Image img_goods_info -> p
    javax.microedition.lcdui.Image img_unit_price -> q
    javax.microedition.lcdui.Image img_own -> r
    void show(javax.microedition.lcdui.Graphics) -> a
    void loadResource() -> a
    void removeResource() -> d
    void keyPressed(int) -> a
    void keyReleased(int) -> b
    void logic() -> c
    void removeServerImage() -> b
    int access$0(com.dave.ftxz.view.Dialog) -> a
    com.dave.ftxz.main.CanvasControl access$1(com.dave.ftxz.view.Dialog) -> b
com.dave.ftxz.view.Dialog$AutoCloseDialogTimerTask -> o:
    com.dave.ftxz.view.Dialog this$0 -> a
    void run() -> run
com.dave.ftxz.view.Game -> p:
    com.dave.ftxz.main.CanvasControl canvasControl -> a
    javax.microedition.lcdui.Image img_map -> D
    javax.microedition.lcdui.Image img_bar_side -> E
    javax.microedition.lcdui.Image img_bar_distance -> F
    javax.microedition.lcdui.Image img_bar_coin -> G
    javax.microedition.lcdui.Image img_number_gura -> H
    javax.microedition.lcdui.Image img_key -> I
    javax.microedition.lcdui.Image img_airship -> b
    javax.microedition.lcdui.Image img_hero -> c
    javax.microedition.lcdui.Image img_aerolite -> d
    javax.microedition.lcdui.Image img_coin -> e
    javax.microedition.lcdui.Image img_slow -> f
    javax.microedition.lcdui.Image img_sprint -> g
    javax.microedition.lcdui.Image img_protected -> h
    javax.microedition.lcdui.Image[] a_img_count_number -> J
    javax.microedition.lcdui.Image[] a_img_full_coin -> K
    javax.microedition.lcdui.Image[] a_img_attract -> i
    javax.microedition.lcdui.Image[] a_img_boom_bird -> j
    javax.microedition.lcdui.Image[] a_img_bullet -> k
    javax.microedition.lcdui.Image[] a_img_pet -> l
    javax.microedition.lcdui.Image[] a_img_alert -> m
    javax.microedition.lcdui.Image[] a_img_beHit_bird -> n
    javax.microedition.lcdui.Image[] a_img_beHit_hero -> o
    javax.microedition.lcdui.Image[] a_img_bar_blood -> p
    javax.microedition.lcdui.Image[] a_img_treasure -> q
    javax.microedition.lcdui.Image[][] a_2_img_bird -> r
    int[][] treasure_info -> s
    int y_map -> t
    java.util.Vector v_bullet -> u
    java.util.Vector v_bird -> v
    java.util.Vector v_aerolite -> w
    java.util.Vector v_coin -> x
    java.util.Vector v_treasure -> y
    int size_v -> L
    com.dave.ftxz.model.Hero hero -> z
    int num_coin -> A
    int length_unit -> M
    int power_level -> B
    int gura_ctrl -> N
    boolean countdown -> O
    int frame_count_number -> P
    int time_start -> Q
    int y_number -> R
    int downspeed_y -> S
    int trans_x -> T
    int trans_y -> U
    int trans_speed_y -> V
    boolean trans -> C
    int frame_trans -> W
    void show(javax.microedition.lcdui.Graphics) -> a
    void loadCountImage() -> f
    void loadResource() -> a
    void removeServerImage() -> b
    void removeResource() -> d
    void keyPressed(int) -> a
    void keyReleased(int) -> b
    void logic() -> c
    void createBird() -> g
    void coinTransformDistance() -> e
com.dave.ftxz.view.Home -> q:
    com.dave.ftxz.main.CanvasControl canvasControl -> a
    javax.microedition.lcdui.Image img_back -> b
    javax.microedition.lcdui.Image[] a_img_button -> c
    javax.microedition.lcdui.Image[] a_img_word -> d
    byte index -> e
    void show(javax.microedition.lcdui.Graphics) -> a
    void keyPressed(int) -> a
    void keyReleased(int) -> b
    void loadResource() -> a
    void removeResource() -> d
    void logic() -> c
    void removeServerImage() -> b
com.dave.ftxz.view.NullView -> r:
    void show(javax.microedition.lcdui.Graphics) -> a
    void loadResource() -> a
    void keyPressed(int) -> a
    void keyReleased(int) -> b
    void logic() -> c
    void removeServerImage() -> b
com.dave.ftxz.view.Shop -> s:
    com.dave.ftxz.main.CanvasControl canvasControl -> a
    javax.microedition.lcdui.Image img_back -> b
    javax.microedition.lcdui.Image img_number -> c
    javax.microedition.lcdui.Image img_choose -> d
    javax.microedition.lcdui.Image img_point -> e
    javax.microedition.lcdui.Image[][] a_img_goods -> f
    javax.microedition.lcdui.Image[] a_img_btn_start -> g
    javax.microedition.lcdui.Image img_unit_price -> h
    javax.microedition.lcdui.Image img_press_ok -> i
    int index_choose -> j
    int index_last -> k
    int frame -> l
    void show(javax.microedition.lcdui.Graphics) -> a
    void showPrice(int,javax.microedition.lcdui.Graphics) -> a
    void loadResource() -> a
    void keyPressed(int) -> a
    void keyReleased(int) -> b
    void logic() -> c
    void removeServerImage() -> b
com.dave.showable.Showable -> t:
    void show(javax.microedition.lcdui.Graphics) -> a
    void loadResource() -> a
    void removeServerImage() -> b
    void keyPressed(int) -> a
    void keyReleased(int) -> b
    void logic() -> c
com.zn.hs.httpc.HSConnection -> u:
    java.lang.Thread thread -> a
    java.lang.String httpAddress -> b
    void run() -> run
    byte[] getViaHttpConnection(java.lang.String) -> a
com.zn.hs.httpc.HSmd5 -> v:
    byte[] PADDING -> a
    long[] state -> b
    long[] count -> c
    byte[] buffer -> d
    java.lang.String digestHexStr -> e
    byte[] digest -> f
    void md5Init() -> a
    long FF(long,long,long,long,long,long,long) -> a
    long GG(long,long,long,long,long,long,long) -> b
    long HH(long,long,long,long,long,long,long) -> c
    long II(long,long,long,long,long,long,long) -> d
    void md5Update(byte[],int) -> a
    void md5Memcpy(byte[],byte[],int,int,int) -> a
    void md5Transform(byte[]) -> a
    void Encode(byte[],long[],int) -> a
    long b2iu(byte) -> a
    java.lang.String toMD5(java.lang.String) -> a
com.zn.hs.prop.HSProp -> w:
    java.lang.String HSProp_Version -> a
    javax.microedition.midlet.MIDlet getMid -> h
    com.zn.hs.prop.HSPropListenner hsPropListenner -> i
    byte breakPoint -> b
    java.lang.String deductType -> c
    java.lang.String stbid -> d
    java.lang.String userid -> e
    java.lang.String deductfee -> j
    java.lang.String cpcode -> k
    java.lang.String actionID -> l
    com.zn.hs.prop.ioStream ioStream -> f
    java.lang.String GAMEPROP_ADDRESS -> g
    java.lang.String buyPropAddress -> m
    java.util.Random random -> n
    void DodeductFee$16da05f7(java.lang.String) -> a
    void DoBuyPropSuccess(java.lang.String,java.lang.String,java.lang.String) -> a
    int getRandom(int,int) -> a
    void returnApiData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void setCpcode(java.lang.String) -> b
    void setActionID(java.lang.String) -> c
    java.lang.String encrypt(java.lang.String) -> d
    boolean access$0(com.zn.hs.prop.HSProp) -> a
    java.lang.String access$1(com.zn.hs.prop.HSProp) -> b
    java.lang.String access$2(com.zn.hs.prop.HSProp) -> c
    java.lang.String access$3(com.zn.hs.prop.HSProp) -> d
com.zn.hs.prop.HSProp$1 -> x:
    com.zn.hs.prop.HSProp this$0 -> a
    void run() -> run
com.zn.hs.prop.HSPropListenner -> y:
    void onResult$42923b27(java.lang.String) -> b
com.zn.hs.prop.ParseXML -> z:
    java.lang.String xml_key -> a
    int keyStart -> b
    int keyEnd -> c
    java.lang.String xml_value -> d
    int valueStart -> e
    int valueEnd -> f
    int valueCount -> g
    byte[] bytea_parsexml -> h
    boolean b_start -> i
    boolean b_exit -> j
    java.util.Hashtable hashtable -> k
    void parsexml(byte[],java.util.Hashtable) -> a
com.zn.hs.prop.ioStream -> aa:
    com.zn.hs.prop.HSProp hsp -> a
    byte[] BufferData -> b
    javax.microedition.io.SocketConnection socketCon -> c
    java.io.InputStream inputStream -> d
    java.io.OutputStream outputStream -> e
    java.lang.Thread streamThread -> f
    boolean readStreamData -> g
    com.zn.hs.prop.ParseXML parsexml -> h
    java.util.Hashtable hashTableIO -> i
    void sendXMLDate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void run() -> run
    boolean SocketConn() -> a
    void clear() -> b
org.json.me.BooleanEx -> ab:
    java.lang.Boolean TRUE -> a
    java.lang.Boolean FALSE -> b
org.json.me.JSONArray -> ac:
    java.util.Vector myArrayList -> a
    java.lang.String join(java.lang.String) -> a
    int length() -> a
    java.lang.Object opt(int) -> a
    java.lang.String toString() -> toString
org.json.me.JSONException -> ad:
org.json.me.JSONObject -> ae:
    java.util.Hashtable myHashMap -> b
    java.lang.Object NULL -> a
    java.lang.Object get(java.lang.String) -> c
    long getNum(java.lang.String) -> d
    int getInt(java.lang.String) -> a
    java.lang.String getString(java.lang.String) -> b
    java.lang.String numberToString(java.lang.Object) -> b
    java.lang.String quote(java.lang.String) -> e
    java.lang.String toString() -> toString
    java.lang.String valueToString(java.lang.Object) -> a
org.json.me.JSONObject$Null -> af:
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
org.json.me.JSONString -> ag:
    java.lang.String toJSONString() -> a
org.json.me.JSONTokener -> ah:
    int myIndex -> a
    java.lang.String mySource -> b
    void back() -> a
    char next() -> b
    java.lang.String next(int) -> a
    char nextClean() -> c
    java.lang.Object nextValue() -> d
    org.json.me.JSONException syntaxError(java.lang.String) -> a
    java.lang.String toString() -> toString
